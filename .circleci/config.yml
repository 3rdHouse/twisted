# CircleCI 2.0 configuration file for running Twisted checks.
#
# Email notifications are configured only from web.
# See "Email Preferences by Organization" in
# https://circleci.com/account/notifications
#
# Based on these v1.0 steps:
# https://pewpewthespells.com/blog/building_python_on_circleci.html
#
# This uses the v2 workflows and a separate commit status is sent for each
# job.
#
# CircleCI 2.0 automatically sets a $BASH_ENV variable to a
# random name in /tmp, and will source this file for each step.
#
version: 2

jobs:
  osx-wheels:
    working_directory: ~/osx-wheels
    macos:
      xcode: "10.0.0"
    steps:
      # Get the source.
      - checkout

      - run:
          name: Prepare the environment.
          command: |
            python --version
            pip install -q --user --ignore-installed --upgrade virtualenv
            pip install -q tox --user
            ln -f -s $HOME/Library/Python/2.7/bin/virtualenv /usr/local/bin/virtualenv
            echo 'export PATH=/usr/local/bin:$PATH:/Users/distiller/Library/Python/2.7/bin' >> $BASH_ENV
            echo 'export CIBW_PLATFORM=macos' >> $BASH_ENV

      - run:
          name: Build the OSX wheels.
          command: |
            tox -r -e wheels

      - store_artifacts:
          path: wheelhouse/

  linux-wheels:
    working_directory: ~/linux-wheels
    docker:
      - image: circleci/python:3.6
    steps:
      # Get the source.
      - checkout

      - run:
          name: Prepare the environment.
          command: |
            python --version
            pip install -q --user --ignore-installed --upgrade virtualenv
            pip install -q tox --user
            echo 'export CIBW_PLATFORM=linux' >> $BASH_ENV

      - run:
          name: Build the Linux wheels.
          command: |
            tox -r -e wheels

      - store_artifacts:
          path: wheelhouse/

  static_checkers:
    working_directory: ~/static-checkers
    docker:
      - image: circleci/python:2.7
    steps:
      # Get the source.
      - checkout

      - run:
          name: Prepare the environment.
          command: |
            python --version
            pip install -q --user --ignore-installed --upgrade virtualenv
            pip install -q tox --user
            echo 'export PATH=~/.local/bin:$PATH' >> $BASH_ENV

      # Run each checker in a separate step, but always run all steps to get
      # a the results from each step.
      - run:
          name: Check newsfragment.
          when: always
          command: |
            tox -r -e newsfragment
      - run:
          name: Check manifest-checker.
          when: always
          command: |
            tox -r -e manifest-checker

  #
  # Documentation tests are slow so we execute them in a separate job.
  #
  documentation:
    working_directory: ~/documentation
    docker:
      - image: circleci/python:2.7
    steps:
      # Get the source.
      - checkout

      - run:
          name: Prepare the environment.
          command: |
            python --version
            pip install -q --user --ignore-installed --upgrade virtualenv
            pip install -q tox --user
            echo 'export PATH=~/.local/bin:$PATH' >> $BASH_ENV

      - run:
          name: Check the narrative documentation.
          command: |
            tox -r -e narrativedocs

      - run:
          name: Check the API documentation.
          command: |
            tox -r -e apidocs

workflows:
  version: 2
  all-tests:
    jobs:
      - static_checkers
      - documentation
      - wheels
