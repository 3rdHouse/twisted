; tox configuration file for running tests.
;
; The main trial based environments are defined based on a set of factors. Each
; factor will trigger a different behavior. Multiple factors can be set for the
; same environment:
;
; * alldeps - install all possible dependencies.
; * nodeps - avoid installing any dependencies apart from testing tools.
; * withcov - run the tests wrapped using the coverage.
; * nocov - run the tests directly, without using the coverage wrapper.
; * wheel - build the wheel distribution
; * posix - prepare the tests to be run in a Linux/Unix/macOS environment.
; * macos - prepare the tests to be run in a macOS 10.11+ environment (superset of posix)
; * windows - prepare the tests to be executed under Windows.
;
; See README.rst for example tox commands.
;
; There are also various non-default environments used by the continuous
; integration system: the `codecov-push` and `coveralls-push` push the coverage
; results to codecov.io and coveralls.io, respectively. They should be called
; after running both some number of `-withcov` environments and also
; `coverage-prepare`.
;
; For compatibility with the current infrastructure, `codecov-publish`
; combines `coverage-prepare` and `codecov-push` into a single step.
;
; A non-default `txchecker-travis` environment is used to run twistedchecker
; on travis in --diff mode
;
[tox]
minversion=3.20.1
requires=
    virtualenv>=20.0.35
    tox-wheel>=0.5.0
skip_missing_interpreters=True
envlist=lint, mypy,
    apidocs, narrativedocs, newsfragment,
    manifest-checker, twine,
    py38-alldeps-nocov

[default]
; Files and directories that contain Python source for linting.
sources = setup.py src/ docs/conch/examples docs/mail/examples docs/names/examples docs/pair/examples docs/web/examples docs/words/examples
; These examples fail lint, see https://twistedmatrix.com/trac/ticket/9952
;   docs/core/examples

[testenv]
wheel = True
wheel_pep517 = True
;; dependencies managed by extras in setup.cfg
extras =
    ; The "nodeps" build still depends on PyHamcrest.
    nodeps: test

    alldeps: all_non_platform

    windows: windows_platform

    alldeps-macos: osx_platform

    serial: serial

    ; Documentation needs Twisted install to get the version.
    narrativedocs: dev

;; dependencies that are not specified as extras
deps =
    {withcov}: coverage

    {coverage-prepare,codecov-publish}: coverage

    {codecov-push,codecov-publish}: codecov

    coveralls-push: coveralls
    coveralls-push: PyYAML

    wheel: wheel

    ; Code quality checkers
    manifest-checker: check-manifest>=0.42

    twine: twine

    lint: pre-commit

    wheels: cibuildwheel==1.6.1

; All environment variables are passed.
passenv = *

setenv =
    ; Enable sub-processes coverage reports and store coverage reports in a
    ; known location.
    COVERAGE_PROCESS_START = {toxinidir}/.coveragerc
    COVERAGE_FILE = {toxinidir}/.coverage
    # Help tests know where the base directory is.
    TOX_INI_DIR = {toxinidir}

    ; Configure cibuildwheel to build wheels for:
    ;       CPython 3.5, 3.6, 3.7 and 3.8.
    ; This includes variants of bit depth, unicode width, etc.
    wheels: CIBW_BUILD=cp35-* cp36-* cp37-* cp38-*

    ; If serial or windows extras, force serial testing
    {windows,serial}: TWISTED_FORCE_SERIAL_TESTS = 1

skip_install =
    coverage-prepare: True
    codecov: True
    coveralls: True
    lint: True
    manifest-checker: True

commands =
    ;
    ; Display information about Python interpreter
    ; which will be used in subsequent steps
    ;
    python {toxinidir}/admin/dump_all_version_info.py

    posix: python -c "print('Running on POSIX (no special dependencies)')"

    ; Run tests without wrapping them using coverage.
    nocov: python -m twisted.trial --reactor={env:TWISTED_REACTOR:default} --reporter={env:TRIAL_REPORTER:verbose}  {posargs:twisted}

    ; Run the tests wrapped using coverage.
    withcov: python {toxinidir}/admin/_copy.py {toxinidir}/admin/zz_coverage.pth {envsitepackagesdir}/zz_coverage.pth
    withcov: coverage erase
    withcov: coverage run -p --rcfile={toxinidir}/.coveragerc -m twisted.trial --reactor={env:TWISTED_REACTOR:default} --reporter={env:TRIAL_REPORTER:verbose} {posargs:twisted}

    ; Prepare coverage reports for publication.
    {coverage-prepare,codecov-publish}: coverage combine
    {coverage-prepare,codecov-publish}: coverage xml -o coverage.xml -i

    ; Publish coverage reports to codecov.
    {codecov-push,codecov-publish}: codecov {env:CODECOV_OPTIONS:} -X search -X gcov -f coverage.xml

    ; Publish coverage reports to coveralls.
    coveralls-push: coveralls

    ; Build in a root folder so that buildbot can pick the result
    wheel: python -m pip wheel {toxinidir} --no-deps --use-pep517 --wheel-dir {toxinidir}/dist

    lint: pre-commit {posargs:run --all-files --show-diff-on-failure}

    apidocs: {toxinidir}/bin/admin/build-apidocs {toxinidir}/src/ apidocs
    narrativedocs: sphinx-build -aW -b html -d {toxinidir}/docs/_build {toxinidir}/docs {toxinidir}/docs/_build/

    newsfragment: python {toxinidir}/bin/admin/check-newsfragment "{toxinidir}"

    manifest-checker: check-manifest --ignore "docs/_build/**,docs/historic/**,admin/**,bin/admin/**"

    twine: twine check {distdir}/*.*

    wheels: cibuildwheel --output-dir {toxinidir}/wheelhouse {toxinidir}
    wheels: python setup.py sdist --formats=gztar,zip --dist-dir={toxinidir}/wheelhouse
    wheels: ls -l {toxinidir}/wheelhouse

[testenv:apidocs]
deps=https://github.com/twisted/pydoctor/archive/3f9c64829dfa040b334c9ae27c332c7078356e79.zip

[testenv:mypy]

description = run Mypy (static type checker)

deps =
    mypy==0.782
    mypy_extensions==0.4.3
    mypy-zope==0.2.7

commands =
    mypy                                       \
        --cache-dir="{toxworkdir}/mypy_cache"  \
        {tty:--pretty:}                        \
        {posargs:src}
