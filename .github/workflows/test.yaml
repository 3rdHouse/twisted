name: Run tests

on:
  push:
    branches: [ trunk ]
  pull_request:
    branches: [ trunk ]

jobs:
  lint:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: ./.github/actions/display-python-info

    - name: Get pip cache dir
      id: pip-cache
      run: |
        python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

    - uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
            ${{ runner.os }}-pip-

    - uses: ./.github/actions/lint

  mypy:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: ./.github/actions/display-python-info

    - name: Get pip cache dir
      id: pip-cache
      run: |
        python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

    - uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
            ${{ runner.os }}-pip-

    - uses: ./.github/actions/mypy

  static-checkers:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
      with:
        # Need history on all branches for manifest-checker to work
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: ./.github/actions/display-python-info

    - name: Get pip cache dir
      id: pip-cache
      run: |
        python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

    - uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
            ${{ runner.os }}-pip-

    - uses: ./.github/actions/static-checkers

  docs:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - uses: ./.github/actions/display-python-info

    - name: Get pip cache dir
      id: pip-cache
      run: |
        python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

    - uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
            ${{ runner.os }}-pip-

    - uses: ./.github/actions/docs

  build-wheels:
    needs: [lint, mypy, static-checkers, docs]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
          os: [ubuntu-20.04, macos-10.15, windows-2019]
          python-version: [3.5, 3.6, 3.7, 3.8, 3.9]
    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - uses: ./.github/actions/display-python-info

    - name: Get pip cache dir
      id: pip-cache
      run: |
        python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

    - uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
            ${{ runner.os }}-pip-

    - uses: ./.github/actions/wheels

    - uses: actions/upload-artifact@v2
      with:
        name: twisted-artifact-${{ matrix.os }}-${{ matrix.python-version }}
        path: ${{ github.workspace }}/dist/*.whl
        if-no-files-found: error

  testing:
    needs: build-wheels
    runs-on: ubuntu-20.04
    strategy:
      matrix:
          python-version: [3.5, 3.6, 3.7, 3.8, 3.9, pypy3]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - uses: ./.github/actions/display-python-info

    - name: Get pip cache dir
      id: pip-cache
      run: |
        python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

    - uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
            ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip tox
        tox --notest -e alldeps-withcov-posix,coverage-prepare,codecov-push,coveralls-push

    - name: Test
      run: |
        python --version
        tox -q -e alldeps-withcov-posix,coverage-prepare,codecov-push,coveralls-push

  # We need a builder without IPv6. This is going to be slower than all the
  # others, but that's ok.
  testing_no_ipv6:
    needs: build-wheels
    runs-on: ubuntu-20.04
    env:
      DISABLE_IPV6: yes
    strategy:
      matrix:
          python-version: [3.6]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get pip cache dir
      id: pip-cache
      run: |
        python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

    - uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
            ${{ runner.os }}-pip-

    - uses: ./.github/actions/display-python-info

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip tox
        tox --notest -e alldeps-withcov-posix,coverage-prepare,codecov-push,coveralls-push

    - name: Test
      run: |
        python --version
        tox -q -e alldeps-withcov-posix,coverage-prepare,codecov-push,coveralls-push
